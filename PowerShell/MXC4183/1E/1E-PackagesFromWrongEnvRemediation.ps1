?
$OtherEnvDpNamePattern = "*wq*"

$LocalCachePath = [string]::Empty
$InstallationDirectory = [string]::Empty

$LocalCachePath = [string](Get-ItemProperty -Path Registry::HKEY_LOCAL_MACHINE\SOFTWARE\1E\NomadBranch -Name LocalCachePath -ErrorAction Ignore).LocalCachePath
$InstallationDirectory = [string](Get-ItemProperty -Path Registry::HKEY_LOCAL_MACHINE\SOFTWARE\1E\NomadBranch -Name InstallationDirectory -ErrorAction Ignore).InstallationDirectory

$regex = '^; Generated by "(?<servername>[^"]*)" from "(?<path>[^"]*)"(.*)$'

$contentIDs = @()

if($LocalCachePath.Length -gt 0){
    Get-ChildItem -Path "$($LocalCachePath)*.lsz" | % {Select-String -Path $_ -Pattern $regex -AllMatches | % { if($($_.matches[0].groups["servername"].value) -like $OtherEnvDpNamePattern){$($_.matches[0].groups["path"].value) | Select-String -Pattern '[^ \\]*$' -AllMatches | % { $contentIDs += $($_.matches[0].groups[0].value) } } }}
}

 if( ($contentIDs.Count -gt 0) -and ( (Get-Service -Name NomadBranch -ErrorAction Ignore).Status -eq "Running") ){
    
    #strip versions and any duplicates
    for($i = 0; $i -lt $contentIDs.Count;$i++){
        $pattern = '\.\d*$'
        $contentIDs[$i] = [regex]::Replace(([string]$contentIDs[$i]), $pattern,[string]::Empty)
    }
    $contentIDs = $contentIDs | Select-Object -Unique

    #run only if CacheCleaner exists
    $CacheCleaner = "$($InstallationDirectory)\cachecleaner.exe"
    if([System.IO.File]::Exists($CacheCleaner) ){
        foreach($contentID in $contentIDs){
            Write-Host "Going to delete package $contentID"
            &$CacheCleaner "-DeletePkg=$contentId" -PkgVer=*
            Start-Sleep -Seconds 15
        }
    }
 }
 