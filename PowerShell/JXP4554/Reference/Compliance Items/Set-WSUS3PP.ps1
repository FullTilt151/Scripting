# Set this variable to true for the remediation script, false for the detection script
$remediate = $false
$CertText = 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGRVRDQ0EvbWdBd0lCQWdJUU1kSEwwWEJwN3hZQUFBQUFWV1p1K0RBTkJna3Foa2lHOXcwQkFRc0ZBRENCDQp0REVMTUFrR0ExVUVCaE1DVlZNeEZqQVVCZ05WQkFvVERVVnVkSEoxYzNRc0lFbHVZeTR4S0RBbUJnTlZCQXNUDQpIMU5sWlNCM2QzY3VaVzUwY25WemRDNXVaWFF2YkdWbllXd3RkR1Z5YlhNeE9UQTNCZ05WQkFzVE1DaGpLU0F5DQpNREUxSUVWdWRISjFjM1FzSUVsdVl5NGdMU0JtYjNJZ1lYVjBhRzl5YVhwbFpDQjFjMlVnYjI1c2VURW9NQ1lHDQpBMVVFQXhNZlJXNTBjblZ6ZENCRGIyUmxJRk5wWjI1cGJtY2dRMEVnTFNCUFZrTlRNVEFlRncweE9EQTRNRGd4DQpOREU1TXpCYUZ3MHlNREE0TURneE5EUTVNakphTUc4eEN6QUpCZ05WQkFZVEFsVlRNUkV3RHdZRFZRUUlFd2hMDQpaVzUwZFdOcmVURVRNQkVHQTFVRUJ4TUtURzkxYVhOMmFXeHNaVEVVTUJJR0ExVUVDaE1MU0hWdFlXNWhJRWx1DQpZeTR4RERBS0JnTlZCQXNUQTBoVlRURVVNQklHQTFVRUF4TUxTSFZ0WVc1aElFbHVZeTR3Z2dFaU1BMEdDU3FHDQpTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFES05TN2V1MVRzZU51OHFRZGV3dHA2OW9pbmFUcFpSLy9UDQowelNrTVJPNE5xSytoN3VhYlZYMzRhV0grekpHMWVtODV1UFBDZUZVUnY1Mlg0djRKZ25QNG5VK1B0eGE2WG5uDQo0RVkyd1U3ZG5JTkM4R3lvempTV3BDZHlzMmppKy9wR1ZYbFBWaFdXR2VXelhtblFGeWU4aXMrdENsbWVpNi9zDQpQYnhmZlhQRS9ESjkzRmxxQ1VPSVAzVkJYZjRUbDAxSXFKdTRWR1RFSGFGa0d3L1lISWFkaTJML2FMV0lsZ2xtDQpSTkR6Z25jUjRwclpmZFJueXFtYnZMeFV3enQrU3pNR3BJclJJZnRSZmE0dEQycXNjZ21XOUk0MVZqMko0MjMxDQpmNHhrcHNuZ1JPeGxnMnlVOEZRdmdETHNYRXRrdi9qbE54U1BNa290N0VCM1JybkR2VEVGQWdNQkFBR2pnZ0ZoDQpNSUlCWFRBT0JnTlZIUThCQWY4RUJBTUNCNEF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdNd2FnWUlLd1lCDQpCUVVIQVFFRVhqQmNNQ01HQ0NzR0FRVUZCekFCaGhkb2RIUndPaTh2YjJOemNDNWxiblJ5ZFhOMExtNWxkREExDQpCZ2dyQmdFRkJRY3dBb1lwYUhSMGNEb3ZMMkZwWVM1bGJuUnlkWE4wTG01bGRDOXZkbU56TVMxamFHRnBiakkxDQpOaTVqWlhJd01RWURWUjBmQkNvd0tEQW1vQ1NnSW9ZZ2FIUjBjRG92TDJOeWJDNWxiblJ5ZFhOMExtNWxkQzl2DQpkbU56TVM1amNtd3dUQVlEVlIwZ0JFVXdRekEzQmdwZ2hrZ0JodnBzQ2dFRE1Da3dKd1lJS3dZQkJRVUhBZ0VXDQpHMmgwZEhBNkx5OTNkM2N1Wlc1MGNuVnpkQzV1WlhRdmNuQmhJREFJQmdabmdRd0JCQUV3SHdZRFZSMGpCQmd3DQpGb0FVZmhvZkdoRjBYR1RKREIrVUFhdjlnV1F1b1N3d0hRWURWUjBPQkJZRUZCWmhMakVpQWlTVlJqbjZvSGhDDQpLSW53SXdZbE1Ba0dBMVVkRXdRQ01BQXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS1N6Q1RnODNyajFscjZMDQovbE1JWkhxUldkSUNoMVowMjJ4bVhvSkhOWVJkei9YQUc5REFsNjVudlpkaUxwalZNcUlmbWlWbG1QM0NvaFBDDQpYMHBERHY5cmxlMHlkbmZpQVJzUi9JSDFPalFpUURBYWYvVklFZ1BIcG1QcmxnMEZ2SlJ4ckdROHl5SGt3b3FMDQpRRGtMeHJsZnNMcU9yZFZEcVVISjl2a3J4ZXJnNEtPaWp5MC9CeDRVZ2Q5a01xOG9BS2tobUZ6N0g1b3l3YzZaDQo3K3NQZis1eXV2aGg3NjZyTFNLRGMzVW1zbWc5L3R6VjQwM0t1bEpmZkk5aTgvVDdZTUtPcCswUW9jZVM5L3hUDQpDTlhnTXNXTmY2V0ZKSUExSGpZdm5wQ28xZ3BxSWRLNElHOHBDamZKbjRYd3Z3WGlpWUJVWjViSnh0aEdVc0RWDQphcFRsK1pjPQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K'
$certFile = 'C:\Temp\cert.cer'
# Put code here to determine if item is compliant 
if ((Measure-Object -InputObject (Get-ChildItem Cert:\LocalMachine\TrustedPublisher | Where-Object {$_.Thumbprint -eq 'â€Ž1DDFF1F8B3F9B5924F4D69BF8CAA75DE2642F435'})).Count -eq 1) {$compliant = $true}
else {
    $compliant = $false
    #if the item is not compliant, be sure to run the lines below 
    if ($remediate) {     
        # If it is not, put the code here to fix it 
        $ByteArray = [System.Convert]::FromBase64String($CertText)
        [System.IO.File]::WriteAllBytes($certFile, $ByteArray)
        $pfx = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
        $pfx.Import($certFile)
        $store = New-Object System.Security.Cryptography.X509Certificates.X509Store([string]"TrustedPublisher", [string]"LocalMachine")
        $store.Open("MaxAllowed")
        $store.Add($pfx)
        $store.close()
        $compliant = $true
    }
}
Write-Output $compliant